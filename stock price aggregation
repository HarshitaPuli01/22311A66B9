
const express = require("express");
const axios = require("axios");

const app = express();
const PORT = 9876;
const WINDOW_SIZE = 10;

const ID_TO_URL = {
    'p': 'http://20.244.56.144/evaluation-service/primes',
    'f': 'http://20.244.56.144/evaluation-service/fibo',
    'e': 'http://20.244.56.144/evaluation-service/even',
    'r': 'http://20.244.56.144/evaluation-service/rand'
};

let windowQueue = [];
let windowSet = new Set();

function updateWindow(newNumbers) {
    const windowPrevState = [...windowQueue];
    for (const num of newNumbers) {
        if (!windowSet.has(num)) {
            windowQueue.push(num);
            windowSet.add(num);
            if (windowQueue.length > WINDOW_SIZE) {
                const removed = windowQueue.shift();
                windowSet.delete(removed);
            }
        }
    }
    return {
        windowPrevState,
        windowCurrState: [...windowQueue]
    };
}

function getAverage() {
    if (windowQueue.length === 0) return 0;
    const sum = windowQueue.reduce((a, b) => a + b, 0);
    return Number((sum / windowQueue.length).toFixed(2));
}

app.get("/numbers/:numberid", async (req, res) => {
    const id = req.params.numberid;
    const url = ID_TO_URL[id];

    if (!url) {
        return res.status(400).json({ error: "Invalid number ID" });
    }

    const source = axios.CancelToken.source();
    const timeout = setTimeout(() => source.cancel("Timeout"), 500);

    let apiNumbers = [];
    try {
        const response = await axios.get(url, {
            timeout: 500,
            cancelToken: source.token
        });
        clearTimeout(timeout);
        apiNumbers = response.data.numbers || [];
    } catch (err) {
        clearTimeout(timeout);
        apiNumbers = [];
    }

    const { windowPrevState, windowCurrState } = updateWindow(apiNumbers);
    const avg = getAverage();

    return res.json({
        windowPrevState,
        windowCurrState,
        numbers: apiNumbers,
        avg
    });
});

app.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
});
